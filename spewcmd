#! /bin/sh
#
# Copyright (c) 2015, Peter Piwowarski
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this
#   list of conditions and the following disclaimer. 
# 2. Redistributions in binary form must reproduce the above copyright notice,
#   this list of conditions and the following disclaimer in the documentation
#   and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# spewcmd: launch one of those GUI programs that spew trash to the terminal
#
# This script automates the process of quieting those evil spewhappy
# GTK/Qt/FreeDesktop/whatervergarbage programs, so one can be launched
# from the terminal without rendering it useless for all other tasks.
# Typical usage is something like:
#
#	spewcmd <command> <options...>
#
# where <options...> will be passed as <command>'s arguments. If
# spewcmd itself ever grows options, they will only occur *before*
# <command> is specified.
#
# This will cause stdout and stderr from <command> to go to
# /tmp/<command>.spew; <command> will be backgrounded automatically.
# If /tmp/<command>.spew already exists, the form /tmp/<command>.n.spew
# is used, where n begins as '1' and is incremented until we get a file
# that doesn't exist yet. If <command> is an absolute or relative path, only the
# last component will be used in the temporary file's name.

# envvar PREFIX
#
# Prefix for the spewfile's path; defaults to /tmp. Override with env(1) or
# similar if desired, your value will have a / appended.
PREFIX="${PREFIX:-"/tmp"}/"

CMD="$1"
CMDNAME="${CMD##*/}"
N=1

if [ "$CMD" ]
then
	if [ ! -f $PREFIX"$CMDNAME".spew ]
	then
		SPEWFILE=$PREFIX"$CMDNAME".spew
	else
		while [ -f $PREFIX"$CMDNAME".$N.spew ]
		do
			N=$(($N + 1))
		done
		SPEWFILE=$PREFIX"$CMDNAME".$N.spew
	fi

	exec "$@" > "$SPEWFILE" 2>&1  &
	echo "executed $@"
	echo "spew in $SPEWFILE"

else	
	echo "$0: please specify a command"
fi
